name: Deploy React App to S3 staging
on:
  push:
    branches:
      - staging
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    - name: Add missing Babel plugin
      run: npm install --save-dev @babel/plugin-proposal-private-property-in-object --legacy-peer-deps
    - name: Build with environment variables
      run: |
        echo "REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}" >> .env
        echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
        echo "REACT_APP_API_V2_URL=${{ secrets.REACT_APP_API_V2_URL }}" >> .env
        echo "REACT_APP_GOOGLE_APP_ID=${{ secrets.REACT_APP_GOOGLE_APP_ID }}" >> .env
        echo "REACT_APP_FACEBOOK_APP_ID=${{ secrets.REACT_APP_FACEBOOK_APP_ID }}" >> .env
        echo "REACT_APP_GOOGLE_KEY=${{ secrets.REACT_APP_GOOGLE_KEY }}" >> .env
        echo "REACT_APP_SOCKET_URL=${{ secrets.REACT_APP_SOCKET_URL }}" >> .env
        echo "REACT_APP_TELEMETRY_KEY=${{ secrets.REACT_APP_TELEMETRY_KEY }}" >> .env
        echo "REACT_APP_LAMBDA_URL=${{ secrets.REACT_APP_LAMBDA_URL }}" >> .env
        # Set CI to false to avoid treating warnings as errors
        CI=true npm run build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy to S3
      run: |
        aws s3 sync build/ s3://blueclerk-react-upgrade-deployment --acl public-read --delete